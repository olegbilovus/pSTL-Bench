- name: Create CMakes
  tags:
    - create_cmakes
  ignore_errors: true
  any_errors_fatal: false
  block:
    - name: Create default allocator double
      ansible.builtin.shell:
        cmd: >
          {{ item.value.pre_cmd }}
          cmake {{ cmake.release }}
          {{ cmake.backend }}={{ item.value.build.backend }}
          {{ cmake.compiler }}={{ item.value.build.compiler }}
          {{ cmake.data_type }}=double
          {{ cmake.compiler_flags }}='{{ item.value.build.compiler_flags }}'
          {{ item.value.build.cmake_flags }}
          -S . -B {{ builds_dir }}/{{ item.key }}-da-double
        chdir: "{{ root }}"
      loop: "{{ cmake_builds }}"
      loop_control:
        label: "{{ item.key }}"
      register: _res
      changed_when: _res.rc == 0
      when: item.key in selected_backends
      tags:
        - default_allocator
        - double

    - name: Create custom allocator double
      ansible.builtin.shell:
        cmd: >
          {{ item.value.pre_cmd }}
          cmake {{ cmake.release }}
          {{ cmake.backend }}={{ item.value.build.backend }}
          {{ cmake.compiler }}={{ item.value.build.compiler }}
          {{ cmake.data_type }}=double
          {{ cmake.compiler_flags }}='{{ item.value.build.compiler_flags }}'
          {{ item.value.build.cmake_flags }}
          -S . -B {{ builds_dir }}/{{ item.key }}-ca-double
        chdir: "{{ root }}"
      loop: "{{ cmake_builds }}"
      loop_control:
        label: "{{ item.key }}"
      register: _res
      changed_when: _res.rc == 0
      when: item.key in selected_backends and item.value.build.custom_allocator
      tags:
        - custom_allocator
        - double

    - name: Create default allocator float
      ansible.builtin.shell:
        cmd: >
          {{ item.value.pre_cmd }}
          cmake {{ cmake.release }}
          {{ cmake.backend }}={{ item.value.build.backend }}
          {{ cmake.compiler }}={{ item.value.build.compiler }}
          {{ cmake.data_type }}=float
          {{ cmake.compiler_flags }}='{{ item.value.build.compiler_flags }}'
          {{ item.value.build.cmake_flags }}
          -S . -B {{ builds_dir }}/{{ item.key }}-da-float
        chdir: "{{ root }}"
      loop: "{{ cmake_builds }}"
      loop_control:
        label: "{{ item.key }}"
      register: _res
      changed_when: _res.rc == 0
      when: item.key in selected_backends and item.value.build.build_float
      tags:
        - default_allocator
        - float

    - name: Create custom allocator float
      ansible.builtin.shell:
        cmd: >
          {{ item.value.pre_cmd }}
          cmake {{ cmake.release }}
          {{ cmake.backend }}={{ item.value.build.backend }}
          {{ cmake.compiler }}={{ item.value.build.compiler }}
          {{ cmake.custom_allocator_on }}
          {{ cmake.data_type }}=float
          {{ cmake.compiler_flags }}='{{ item.value.build.compiler_flags }}'
          {{ item.value.build.cmake_flags }}
          -S . -B {{ builds_dir }}/{{ item.key }}-ca-float
        chdir: "{{ root }}"
      loop: "{{ cmake_builds }}"
      loop_control:
        label: "{{ item.key }}"
      register: _res
      changed_when: _res.rc == 0
      when: item.key in selected_backends and item.value.build.build_float and item.value.build.custom_allocator
      tags:
        - custom_allocator
        - float
