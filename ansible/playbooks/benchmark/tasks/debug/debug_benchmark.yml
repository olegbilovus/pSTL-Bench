- name: Print all problemSize_time commands
  tags:
    - never
    - debug_problemSize_time
    - debug_speedup_threads
    - debug_speedup_customAllocator
  block:
    - name: Benchmark default allocator
      ansible.builtin.debug:
        msg: >
          {{ item.1.value.pre_cmd }}
          {{ item.1.value.bench.env_select_threads + '=' + (threads | string)  if item.1.value.bench.env_select_threads else '' }}
          {{ benchmark_global_envs }}
          {{ benchmark.kit_env + '=' + (kit | string) if item.0 == 'for_each' else '' }}
          {{ builds_dir }}/{{ item.1.key }}-da-{{ data_type }}/{{ project_name }}
          {{ benchmark.filter }}='{{ item.1.value.bench.filter_name + item.0}}{{ data_type_filter }}'
          {{ benchmark.min_time }}
          {{ benchmark.format }}
          {{ benchmark.out_format }}
          {{ benchmark.out }}={{ item.1.key }}-da-{{ data_type }}-t{{ threads }}.json
          {{ item.1.value.bench.flag_select_threads + '=' + (threads | string) if item.1.value.bench.flag_select_threads else '' }}
      loop: "{{ cmake_benchs }}"
      loop_control:
        label: "{{ bench_name }}/{{ item.0 }}/{{ item.1.key }}-t{{ threads }}"
      when:
        - item.1.value.bench.default_allocator
        - item.1.key in selected_backends
        - item.0 in selected_algorithms

    - name: Benchmark custom allocator
      ansible.builtin.debug:
        msg: >
          {{ item.1.value.pre_cmd }}
          {{ item.1.value.bench.env_select_threads + '=' + (threads | string)  if item.1.value.bench.env_select_threads else '' }}
          {{ benchmark_global_envs }}
          {{ benchmark.kit_env + '=' + (kit | string) if item.0 == 'for_each' else '' }}
          {{ builds_dir }}/{{ item.1.key }}-ca-{{ data_type }}/{{ project_name }}
          {{ benchmark.filter }}='{{ item.1.value.bench.filter_name + item.0}}{{ data_type_filter }}'
          {{ benchmark.min_time }}
          {{ benchmark.format }}
          {{ benchmark.out_format }}
          {{ benchmark.out }}={{ item.1.key }}-ca-{{ data_type }}-t{{ threads }}.json
          {{ item.1.value.bench.flag_select_threads + '=' + (threads | string) if item.1.value.bench.flag_select_threads else '' }}
      loop: "{{ cmake_benchs }}"
      loop_control:
        label: "{{ bench_name }}/{{ item.0 }}/{{ item.1.key }}-t{{ threads }}"
      when:
        - item.1.value.bench.custom_allocator
        - item.1.key in selected_backends
        - item.0 in selected_algorithms
