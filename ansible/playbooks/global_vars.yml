project_name: "pSTL-Bench"
git_repo: "https://github.com/olegbilovus/{{ project_name }}"
root: "{{ ansible_env.HOME }}/{{ project_name }}"
builds_dir: "{{ root }}/builds"

# Backends
path_bashrc: "{{ ansible_env.HOME }}/.bashrc"
omp_num_threads: "OMP_NUM_THREADS"

backends:
  gccseq:
    pre_cmd: ". {{ path_bashrc }} &&"
    build:
      compiler_flags: ""
      backend: "GNU"
      compiler: "g++"
      custom_allocator: true
      build_float: true
    bench:
      filter_name: "SEQ/std::"
      env_select_threads: ""
      flag_select_threads: ""    
      default_allocator: false
      custom_allocator: true
      float: false
  gccgnu:
    pre_cmd: ". {{ path_bashrc }} &&"
    build:
      compiler_flags: ""
      backend: "GNU"
      compiler: "g++"
      custom_allocator: true
      build_float: false
    bench:
      filter_name: "gnu::"
      env_select_threads: "{{ omp_num_threads }}"
      flag_select_threads: ""    
      default_allocator: false
      custom_allocator: true
      float: false
  gcchpx:
    pre_cmd: ". {{ path_bashrc }} &&"
    build:
      compiler_flags: ""
      backend: "HPX"
      compiler: "g++"
      custom_allocator: false
      build_float: false
    bench:
      filter_name: "hpx::"
      env_select_threads: ""
      flag_select_threads: "--hpx:threads"    
      default_allocator: true
      custom_allocator: false
      float: false
  gcctbb:
    pre_cmd: ". {{ path_bashrc }} && . /opt/intel/oneapi/setvars.sh &&"
    build:
      compiler_flags: ""
      backend: "TBB"
      compiler: "g++"
      custom_allocator: true
      build_float: false
    bench:
      filter_name: "TBB/std::"
      env_select_threads: "{{ omp_num_threads }}"
      flag_select_threads: ""    
      default_allocator: false
      custom_allocator: true
      float: false
  icpxtbb:
    pre_cmd: ". {{ path_bashrc }} && . /opt/intel/oneapi/setvars.sh &&"
    build:
      compiler_flags: ""
      backend: "TBB"
      compiler: "icpx"
      custom_allocator: true
      build_float: false
    bench:
      filter_name: "TBB/std::"
      env_select_threads: "{{ omp_num_threads }}"
      flag_select_threads: ""    
      default_allocator: false
      custom_allocator: true
      float: false
  nvccuda:
    pre_cmd: ". {{ path_bashrc }} &&"
    build:
      compiler_flags: ""
      backend: "NVHPC_CUDA"
      compiler: "nvc++"
      custom_allocator: false
      build_float: true
    bench:
      filter_name: "CUDA/std::"
      env_select_threads: ""
      flag_select_threads: ""    
      default_allocator: true
      custom_allocator: false
      float: false
  nvcomp:
    pre_cmd: ". {{ path_bashrc }} &&"
    build:
      compiler_flags: ""
      backend: "NVHPC_OMP"
      compiler: "nvc++"
      custom_allocator: true
      build_float: true
    bench:
      filter_name: "OMP/std::"
      env_select_threads: "{{ omp_num_threads }}"
      flag_select_threads: ""    
      default_allocator: false
      custom_allocator: true
      float: false
  onedplcpu:
    pre_cmd: ". {{ path_bashrc }} && . /opt/intel/oneapi/setvars.sh &&"
    build:
      compiler_flags: "-fsycl -fsycl-targets=spir64_x86_64" # select the target architecture
      backend: "ONEDPL_CPU"
      compiler: "icpx"
      custom_allocator: true
      build_float: true
    bench:
      filter_name: "onedpl::"
      env_select_threads: "{{ omp_num_threads }}"
      flag_select_threads: ""    
      default_allocator: true
      custom_allocator: false
      float: false
  onedplgpu:
    pre_cmd: ". {{ path_bashrc }} && . /opt/intel/oneapi/setvars.sh &&"
    build:
      compiler_flags: "-fsycl -fsycl-targets=nvptx64-nvidia-cuda" # select the target architecture
      backend: "ONEDPL_GPU"
      compiler: "icpx"
      custom_allocator: false
      build_float: true
    bench:
      filter_name: "onedpl::"
      env_select_threads: ""
      flag_select_threads: ""    
      default_allocator: true
      custom_allocator: false
      float: false
